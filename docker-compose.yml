version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://springdb:5432/appointments
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080/
      - KEYCLOAK_REALM=myrealm
      - KEYCLOAK_RESOURCE=myclient
    depends_on:
      - springdb
      - keycloak

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - backend
  #     - nginx

  springdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: appointments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      
    ports:
      - "5433:5432"
    volumes:
      - ./springdb_data:/var/lib/postgresql/data

  keycloakdb:
    image: postgres:latest
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      
    ports:
      - "5434:5432"
    volumes:
      - ./keycloakdb_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    environment:
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      # KC_HOSTNAME: keycloak
      # KC_HOSTNAME_PORT: 8080
      # KC_HOSTNAME_STRICT: false
      # KC_HOSTNAME_STRICT_HTTPS: false
      KC_PROXY: edge

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

    command: ["start-dev"]
    depends_on:
      - keycloakdb
    ports:
      - "8080:8080"
    volumes:
      - ./config/keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    # depends_on:
    #   - frontend

volumes:
  springdb_data:
  keycloakdb_data:
